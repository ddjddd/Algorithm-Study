#include <iostream>

using namespace std;

int n, m, ans = 0;
int arr[500][500];

int block[27][4][2] = {
    //
    {{0, 0}, {1, 0}, {2, 0}, {3, 0}},
    {{0, 0}, {0, 1}, {0, 2}, {0, 3}},
    //
    {{0, 0}, {1, 0}, {0, 1}, {1, 1}},
    //
    {{0, 0}, {1, 0}, {2, 0}, {2, 1}},
    {{0, 0}, {0, -1}, {0, -2}, {1, -2}},
    {{0, 0}, {-1, 0}, {-2, 0}, {-2, -1}},
    {{0, 0}, {0, 1}, {0, 2}, {-1, 2}},
    //
    {{0, 0}, {1, 0}, {2, 0}, {2, -1}},
    {{0, 0}, {0, -1}, {0, -2}, {-1, -2}},
    {{0, 0}, {-1, 0}, {-2, 0}, {-2, 1}},
    {{0, 0}, {0, 1}, {0, 2}, {1, 2}},
    //
    {{0, 0}, {0, 1}, {1, 1}, {2, 1}},
    {{0, 0}, {0, -1}, {1, -1}, {1, -2}},
    {{0, 0}, {-1, 0}, {-1, -1}, {-2, -1}},
    {{0, 0}, {0, 1}, {-1, 1}, {-1, 2}},
    //
    {{0, 0}, {1, 0}, {1, -1}, {2, -1}},
    {{0, 0}, {0, -1}, {-1, -1}, {-1, -2}},
    {{0, 0}, {-1, 0}, {-1, 1}, {-2, 1}},
    {{0, 0}, {0, 1}, {1, 1}, {1, 2}},
    //
    {{0, 0}, {1, 0}, {2, 0}, {1, 1}},
    {{0, 0}, {0, -1}, {0, -2}, {1, -1}},
    {{0, 0}, {-1, 0}, {-2, 0}, {-1, -1}},
    {{0, 0}, {0, 1}, {0, 2}, {-1, 1}},
    //
    {{0, 0}, {1, 0}, {2, 0}, {1, -1}},
    {{0, 0}, {0, -1}, {0, -2}, {-1, -1}},
    {{0, 0}, {-1, 0}, {-2, 0}, {-1, 1}},
    {{0, 0}, {0, 1}, {0, 2}, {1, 1}},
};

bool bound(int i, int j) {
    return i >= 0 && i < n && j >= 0 && j < m;
}

void check(int i, int j) {
    for (int k = 0; k < 27; k++) {
        // int ret = arr[i][j];
        int ret = 0;
        for (int d = 0; d < 4; d++) {
            int ni = i + block[k][d][0];
            int nj = j + block[k][d][1];

            if (bound(ni, nj)) {
                ret += arr[ni][nj];
            } else {
                ret = -1;
                break;
            }
        }
        if (ret != -1) {
            ans = ans > ret ? ans : ret;
        }
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    // freopen("jh.in", "rt", stdin);

    cin >> n >> m;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            cin >> arr[i][j];
        }
    }

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            check(i, j);
        }
    }

    cout << ans << endl;

    return 0;
}